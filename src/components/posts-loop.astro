---
import { getCollection } from "astro:content";
const allPosts = await getCollection("post");

const { count } = Astro.props;

function parseDate(dateStr) {
  const [month, day, year] = dateStr.split(" ");
  return new Date(`${month} ${parseInt(day)}, ${year}`);
}

// Function to get the icon path for a technology
function getTechIcon(tech: string): string {
  const techIcons: Record<string, string> = {
    'nextjs': '/assets/icons/technologies/nextjs.svg',
    'typescript': '/assets/icons/technologies/typescript.svg',
    'sql': '/assets/icons/technologies/sql.svg',
    'python': '/assets/icons/technologies/python.svg',
    'bash': '/assets/icons/technologies/bash.svg',
    'elastic': '/assets/icons/technologies/elastic.svg',
    'java': '/assets/icons/technologies/java.svg',
    'javascript': '/assets/icons/technologies/javascript.svg',
    'linux': '/assets/icons/technologies/linux.svg',
    'hackthebox': '/assets/icons/technologies/hackthebox.svg',
    'cyberdefenders': '/assets/icons/technologies/cyberdefenders.svg',
    'azure': '/assets/icons/technologies/azure.svg',
    'sentinel': '/assets/icons/technologies/sentinel.svg'
  };
  
  return techIcons[tech.toLowerCase()] || '/assets/icons/technologies/default.svg';
}

const sortedPosts = allPosts
  .map((post) => ({
    ...post,
    date: parseDate(post.data.dateFormatted),
  }))
  .sort((a, b) => b.date.getTime() - a.date.getTime());

const postsLoop = sortedPosts.slice(0, count).map((post) => {
  return {
    ...(post.data || {}),
    link: `/post/${post.slug}`,
    technologies: post.data.technologies || [],
    topics: post.data.topic || [],
  };
});
---

{
  postsLoop.map((post) => {
    return (
      <div
        class="relative cursor-pointer p-7 group glass-card liquid-glass transition-all duration-300 hover:scale-[1.02] hover:shadow-2xl hover:shadow-blue-500/10"
        onclick={`location.href = '${post.link}'`}
      >
        <div class="relative z-30 duration-300 ease-out group-hover:-translate-y-1">
          <div class="mb-3">
            {/* Mobile layout: title on top, topic tag below */}
            <div class="block md:hidden mb-2">
              <h2 class="flex items-center mb-2">
                <a
                  href={post.link}
                  class="text-base font-bold leading-tight tracking-tight dark:text-neutral-100 text-white drop-shadow-[0_0_8px_rgba(255,255,255,0.8)] dark:drop-shadow-[0_0_8px_rgba(255,255,255,0.8)]"
                >
                  {post.title}
                </a>
                <svg
                  class="group-hover:translate-x-0 flex-shrink-0 translate-y-0.5 -translate-x-1 w-2.5 h-2.5 text-neutral-600 dark:text-neutral-400 ml-1 transition-all ease-in-out duration-200 transform"
                  viewBox="0 0 13 15"
                  version="1.1"
                  xmlns="http://www.w3.org/2000/svg"
                  xmlns:xlink="http://www.w3.org/1999/xlink"
                >
                  <g
                    stroke="none"
                    stroke-width="1"
                    fill="none"
                    fill-rule="evenodd"
                    stroke-linecap="round"
                    stroke-linejoin="round"
                  >
                    <g
                      id="svg"
                      transform="translate(0.666667, 2.333333)"
                      stroke="currentColor"
                      stroke-width="2.4"
                    >
                      <g>
                        <>
                          <polyline
                            class="transition-all duration-200 ease-out opacity-0 delay-0 group-hover:opacity-100"
                            points="5.33333333 0 10.8333333 5.5 5.33333333 11"
                          />
                          <line
                            class="transition-all duration-200 ease-out transform -translate-x-1 opacity-0 group-hover:translate-x-0 group-hover:opacity-100 group-hover:ml-0"
                            x1="10.8333333"
                            y1="5.5"
                            x2="0.833333333"
                            y2="5.16666667"
                          />
                        </>
                      </g>
                    </g>
                  </g>
                </svg>
              </h2>
              <div class="flex items-center gap-1">
                <a 
                  href={`/topics/${post.topics[0].toLowerCase().replace(/\s+/g, '').replace(/[&]/g, 'and')}`}
                  class="px-3 py-1.5 text-xs font-semibold text-blue-400 bg-blue-50 dark:bg-blue-900/30 border border-blue-200 dark:border-blue-700 rounded-full shadow-sm hover:shadow-blue-200/50 dark:hover:shadow-blue-400/20 transition-all duration-300 hover:scale-110 hover:rotate-1 flex-shrink-0 animate-pulse-subtle drop-shadow-[0_0_6px_rgba(59,130,246,0.8)] dark:drop-shadow-[0_0_6px_rgba(59,130,246,0.8)] ring-1 ring-white/30 dark:ring-white/30"
                  onclick="event.stopPropagation()"
                >
                  {post.topics[0]}
                </a>
                {post.topics.length > 1 && (
                  <span class="px-2 py-1.5 text-xs font-semibold text-blue-300 bg-blue-100/20 dark:bg-blue-800/20 border border-blue-300/30 dark:border-blue-600/30 rounded-full shadow-sm flex-shrink-0">
                    +{post.topics.length - 1}
                  </span>
                )}
              </div>
            </div>
            
            {/* Desktop layout: title and topic tag side by side */}
            <div class="hidden md:flex items-start justify-between gap-3 mb-2">
              <h2 class="flex items-center flex-1 min-w-0">
                <a
                  href={post.link}
                  class="text-base font-bold leading-tight tracking-tight sm:text-lg dark:text-neutral-100 truncate text-white drop-shadow-[0_0_8px_rgba(255,255,255,0.8)] dark:drop-shadow-[0_0_8px_rgba(255,255,255,0.8)]"
                >
                  {post.title}
                </a>
                <svg
                  class="group-hover:translate-x-0 flex-shrink-0 translate-y-0.5 -translate-x-1 w-2.5 h-2.5 text-neutral-600 dark:text-neutral-400 ml-1 transition-all ease-in-out duration-200 transform"
                  viewBox="0 0 13 15"
                  version="1.1"
                  xmlns="http://www.w3.org/2000/svg"
                  xmlns:xlink="http://www.w3.org/1999/xlink"
                >
                  <g
                    stroke="none"
                    stroke-width="1"
                    fill="none"
                    fill-rule="evenodd"
                    stroke-linecap="round"
                    stroke-linejoin="round"
                  >
                    <g
                      id="svg"
                      transform="translate(0.666667, 2.333333)"
                      stroke="currentColor"
                      stroke-width="2.4"
                    >
                      <g>
                        <>
                          <polyline
                            class="transition-all duration-200 ease-out opacity-0 delay-0 group-hover:opacity-100"
                            points="5.33333333 0 10.8333333 5.5 5.33333333 11"
                          />
                          <line
                            class="transition-all duration-200 ease-out transform -translate-x-1 opacity-0 group-hover:translate-x-0 group-hover:opacity-100 group-hover:ml-0"
                            x1="10.8333333"
                            y1="5.5"
                            x2="0.833333333"
                            y2="5.16666667"
                          />
                        </>
                      </g>
                    </g>
                  </g>
                </svg>
              </h2>
              <div class="flex items-center gap-1">
                <a 
                  href={`/topics/${post.topics[0].toLowerCase().replace(/\s+/g, '').replace(/[&]/g, 'and')}`}
                  class="px-3 py-1.5 text-xs font-semibold text-blue-400 bg-blue-50 dark:bg-blue-900/30 border border-blue-200 dark:border-blue-700 rounded-full shadow-sm hover:shadow-blue-200/50 dark:hover:shadow-blue-400/20 transition-all duration-300 hover:scale-110 hover:rotate-1 flex-shrink-0 animate-pulse-subtle drop-shadow-[0_0_6px_rgba(59,130,246,0.8)] dark:drop-shadow-[0_0_6px_rgba(59,130,246,0.8)] ring-1 ring-white/30 dark:ring-white/30"
                  onclick="event.stopPropagation()"
                >
                  {post.topics[0]}
                </a>
                {post.topics.length > 1 && (
                  <span class="px-2 py-1.5 text-xs font-semibold text-blue-300 bg-blue-100/20 dark:bg-blue-800/20 border border-blue-300/30 dark:border-blue-600/30 rounded-full shadow-sm flex-shrink-0">
                    +{post.topics.length - 1}
                  </span>
                )}
              </div>
            </div>
          </div>
          <p class="text-sm text-neutral-600 dark:text-neutral-400">
            <span>{post.description}</span>
          </p>
          {post.technologies && post.technologies.length > 0 && (
            <div class="flex flex-wrap gap-2 mt-3">
              {post.technologies.map((tech: string) => (
                <img 
                  src={getTechIcon(tech)} 
                  alt={tech}
                  title={tech}
                  class="w-5 h-5 opacity-70 hover:opacity-100 transition-opacity duration-200"
                />
              ))}
            </div>
          )}
          <div class="mt-2.5 text-xs font-medium text-neutral-800 dark:text-neutral-300">
            Posted on {post.dateFormatted}
          </div>
        </div>
      </div>
    )
  })
}
