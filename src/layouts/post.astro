---
import Layout from "./main.astro";
const { frontmatter } = Astro.props;
---

<Layout title={frontmatter.title}>
  <main
    class="relative z-30 max-w-4xl pb-1 mx-auto mt-10 bg-white dark:bg-neutral-950 md:rounded-t-md text-neutral-900"
  >
    <div
      class="relative flex flex-col px-5 pt-6 border-t border-b-0 md:border-r md:border-l md:pt-20 lg:px-0 justify-stretch md:rounded-t-2xl border-neutral-200 dark:border-neutral-800"
    >
      <div
        class="absolute top-0 left-0 hidden w-px h-full mt-1 -translate-x-px md:block bg-gradient-to-b from-transparent to-white dark:to-neutral-950"
      >
      </div>
      <div
        class="absolute top-0 right-0 hidden w-px h-full mt-1 translate-x-px md:block bg-gradient-to-b from-transparent to-white dark:to-neutral-950"
      >
      </div>
      <div class="w-full max-w-2xl mx-auto">
        <div class="flex items-start justify-between mb-4">
          <h1
            class="text-3xl font-bold leading-tight tracking-tighter text-left md:mb-4 md:text-4xl dark:text-neutral-100 lg:text-5xl md:leading-none flex-1"
          >
            {frontmatter.title}
          </h1>
          <div class="flex items-center gap-4 ml-4">
            <div id="view-count" class="text-sm text-neutral-600 dark:text-neutral-400 flex items-center gap-1">
              <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"></path>
              </svg>
              <span id="view-number">-</span> views
            </div>
          </div>
        </div>
      </div>
    </div>

    <article
      class="w-full max-w-2xl mx-auto mb-20 prose-sm prose px-7 lg:px-0 lg:prose-lg dark:prose-invert"
    >
      <slot />
    </article>
  </main>
</Layout>

<script>
  // Track view using localStorage with a better global simulation
  function trackView() {
    const slug = window.location.pathname.split('/').pop();
    if (!slug) return;
    
    const viewNumber = document.getElementById('view-number');
    if (!viewNumber) return;
    
    try {
      // Get current count from localStorage
      const localCounts = JSON.parse(localStorage.getItem('blog_view_counts') || '{}');
      let currentViews = localCounts[slug] || 0;
      
      // If this is the first time, seed with a reasonable initial value
      if (currentViews === 0) {
        // Create a deterministic seed based on the slug hash
        let hash = 0;
        for (let i = 0; i < slug.length; i++) {
          const char = slug.charCodeAt(i);
          hash = ((hash << 5) - hash) + char;
          hash = hash & hash; // Convert to 32-bit integer
        }
        // Use absolute value and modulo to get a reasonable starting number
        currentViews = Math.abs(hash) % 50 + 20; // 20-69 views
        localCounts[slug] = currentViews;
        localStorage.setItem('blog_view_counts', JSON.stringify(localCounts));
      }
      
      // Display current count
      viewNumber.textContent = currentViews;
      
      // Check if user has already viewed this post today
      const todayKey = `viewed-${slug}-${new Date().toDateString()}`;
      if (!sessionStorage.getItem(todayKey)) {
        // Increment the count
        currentViews += 1;
        localCounts[slug] = currentViews;
        localStorage.setItem('blog_view_counts', JSON.stringify(localCounts));
        
        // Update display immediately
        viewNumber.textContent = currentViews;
        
        // Mark as viewed today
        sessionStorage.setItem(todayKey, 'true');
        
        console.log(`View tracked for "${slug}": ${currentViews} total views`);
      }
    } catch (error) {
      console.log('View tracking error:', error);
      // Fallback
      viewNumber.textContent = '1';
      
      const viewedKey = `viewed-${slug}`;
      if (!sessionStorage.getItem(viewedKey)) {
        sessionStorage.setItem(viewedKey, 'true');
      }
    }
  }
  
  // Track view on page load
  if (typeof window !== 'undefined') {
    document.addEventListener('DOMContentLoaded', trackView);
  }
</script>
