---
import { getCollection } from "astro:content";
import Layout from "../../layouts/main.astro";
import PageHeading from "../../components/page-heading.astro";
import PostsLoop from "../../components/posts-loop.astro";

export async function getStaticPaths() {
  const allPosts = await getCollection("post");
  const topics = [...new Set(allPosts.map(post => post.data.topic))];
  
  return topics.map((topic) => {
    const topicSlug = topic.toLowerCase().replace(/\s+/g, '').replace(/[&]/g, 'and');
    return {
      params: { topic: topicSlug },
      props: { topicName: topic }
    };
  });
}

const { topicName } = Astro.props;

// Function to get the icon path for a technology
function getTechIcon(tech: string): string {
  const techIcons: Record<string, string> = {
    'nextjs': '/assets/icons/technologies/nextjs.svg',
    'typescript': '/assets/icons/technologies/typescript.svg',
    'sql': '/assets/icons/technologies/sql.svg',
    'python': '/assets/icons/technologies/python.svg',
    'bash': '/assets/icons/technologies/bash.svg',
    'elastic': '/assets/icons/technologies/elastic.svg',
    'java': '/assets/icons/technologies/java.svg',
    'javascript': '/assets/icons/technologies/javascript.svg',
    'linux': '/assets/icons/technologies/linux.svg',
    'hackthebox': '/assets/icons/technologies/hackthebox.svg',
    'cyberdefenders': '/assets/icons/technologies/cyberdefenders.svg'
  };
  
  return techIcons[tech.toLowerCase()] || '/assets/icons/technologies/default.svg';
}
const allPosts = await getCollection("post");

function parseDate(dateStr) {
  const [month, day, year] = dateStr.split(" ");
  return new Date(`${month} ${parseInt(day)}, ${year}`);
}

const sortedPosts = allPosts
  .map((post) => ({
    ...post,
    date: parseDate(post.data.dateFormatted),
  }))
  .sort((a, b) => b.date.getTime() - a.date.getTime());

// Filter posts by topic
const topicPosts = sortedPosts.filter(post => post.data.topic === topicName);

// Topic data for descriptions
const topicData = {
  "Web Development": {
    description: "Explore frontend, backend, and full-stack development insights, tutorials, and best practices.",
    icon: "üíª"
  },
  "Cloud Computing": {
    description: "Learn about cloud platforms, serverless architectures, and distributed systems.",
    icon: "‚òÅÔ∏è"
  },
  "DevOps": {
    description: "Discover deployment strategies, automation tools, and infrastructure management techniques.",
    icon: "üöÄ"
  },
  "Privacy & Security": {
    description: "Stay updated on security best practices, privacy protection, and cybersecurity insights.",
    icon: "üîí"
  },
  "Artificial Intelligence": {
    description: "Dive into AI, machine learning, and intelligent systems development.",
    icon: "ü§ñ"
  },
  "Networking": {
    description: "Explore network protocols, DNS management, and connectivity solutions.",
    icon: "üåê"
  }
};

const topicInfo = topicData[topicName] || {
  description: `Explore posts about ${topicName.toLowerCase()}.`,
  icon: "üìù"
};
---

<Layout title={`${topicName} - Topics`}>
  <main class="min-h-screen flex flex-col">
    <section class="relative z-20 max-w-6xl mx-auto my-12 px-7 lg:px-0 flex-1">
    <div class="flex items-center gap-4 mb-6">
      <a 
        href="/topics" 
        class="flex items-center gap-2 text-neutral-600 dark:text-neutral-400 hover:text-neutral-900 dark:hover:text-white transition-colors"
      >
        <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7" />
        </svg>
        Back to Topics
      </a>
    </div>

    <div class="flex items-center gap-4 mb-8">
      <span class="text-4xl">{topicInfo.icon}</span>
      <div>
        <h1 class="text-3xl font-bold text-neutral-900 dark:text-neutral-100 mb-2">
          {topicName}
        </h1>
        <p class="text-neutral-600 dark:text-neutral-400">
          {topicInfo.description}
        </p>
      </div>
    </div>

    <div class="mb-6 p-4 glass-card liquid-glass rounded-lg">
      <div class="flex items-center justify-between">
        <span class="text-sm font-medium text-neutral-700 dark:text-neutral-300">
          {topicPosts.length} {topicPosts.length === 1 ? 'post' : 'posts'} in this topic
        </span>
        <a 
          href={`/topics/${topicName.toLowerCase().replace(/\s+/g, '').replace(/[&]/g, 'and')}`}
          class="px-3 py-1.5 text-xs font-semibold text-blue-600 dark:text-blue-400 bg-blue-50 dark:bg-blue-900/30 border border-blue-200 dark:border-blue-700 rounded-full shadow-sm hover:shadow-blue-200/50 dark:hover:shadow-blue-400/20 transition-all duration-300 hover:scale-110 hover:rotate-1"
        >
          {topicName}
        </a>
      </div>
    </div>

    <div class="z-50 grid grid-cols-1 md:grid-cols-2 gap-5 animate-stagger">
      {topicPosts.map((post) => (
        <div class="relative cursor-pointer p-7 group glass-card liquid-glass transition-all duration-300 hover:scale-[1.02] hover:shadow-2xl hover:shadow-blue-500/10" onclick={`location.href = '/post/${post.slug}'`}>
          <div class="relative z-30 duration-300 ease-out group-hover:-translate-y-1">
            <div class="mb-3">
              <div class="flex items-start justify-between gap-3 mb-2">
                <h2 class="flex items-center flex-1 min-w-0">
                  <a
                    href={`/post/${post.slug}`}
                    class="text-base font-bold leading-tight tracking-tight sm:text-lg dark:text-neutral-100 truncate text-white drop-shadow-[0_0_8px_rgba(255,255,255,0.8)] dark:drop-shadow-[0_0_8px_rgba(255,255,255,0.8)]"
                  >
                    {post.data.title}
                  </a>
                  <svg
                    class="group-hover:translate-x-0 flex-shrink-0 translate-y-0.5 -translate-x-1 w-2.5 h-2.5 text-neutral-600 dark:text-neutral-400 ml-1 transition-all ease-in-out duration-200 transform"
                    viewBox="0 0 13 15"
                    version="1.1"
                    xmlns="http://www.w3.org/2000/svg"
                    xmlns:xlink="http://www.w3.org/1999/xlink"
                  >
                    <g
                      stroke="none"
                      stroke-width="1"
                      fill="none"
                      fill-rule="evenodd"
                      stroke-linecap="round"
                      stroke-linejoin="round"
                    >
                      <g
                        id="svg"
                        transform="translate(0.666667, 2.333333)"
                        stroke="currentColor"
                        stroke-width="2.4"
                      >
                        <g>
                          <>
                            <polyline
                              class="transition-all duration-200 ease-out opacity-0 delay-0 group-hover:opacity-100"
                              points="5.33333333 0 10.8333333 5.5 5.33333333 11"
                            />
                            <line
                              class="transition-all duration-200 ease-out transform -translate-x-1 opacity-0 group-hover:translate-x-0 group-hover:opacity-100 group-hover:ml-0"
                              x1="10.8333333"
                              y1="5.5"
                              x2="0.833333333"
                              y2="5.16666667"
                            />
                          </>
                        </g>
                      </g>
                    </g>
                  </svg>
                </h2>
                <a 
                  href={`/topics/${post.data.topic.toLowerCase().replace(/\s+/g, '').replace(/[&]/g, 'and')}`}
                  class="px-3 py-1.5 text-xs font-semibold text-blue-400 bg-blue-50 dark:bg-blue-900/30 border border-blue-200 dark:border-blue-700 rounded-full shadow-sm hover:shadow-blue-200/50 dark:hover:shadow-blue-400/20 transition-all duration-300 hover:scale-110 hover:rotate-1 flex-shrink-0 animate-pulse-subtle drop-shadow-[0_0_6px_rgba(59,130,246,0.8)] dark:drop-shadow-[0_0_6px_rgba(59,130,246,0.8)] ring-1 ring-white/30 dark:ring-white/30"
                  onclick="event.stopPropagation()"
                >
                  {post.data.topic}
                </a>
              </div>
            </div>
            <p class="text-sm text-neutral-600 dark:text-neutral-400">
              <span>{post.data.description}</span>
            </p>
            {post.data.technologies && post.data.technologies.length > 0 && (
              <div class="flex flex-wrap gap-2 mt-3">
                {post.data.technologies.map((tech: string) => (
                  <img 
                    src={getTechIcon(tech)} 
                    alt={tech}
                    title={tech}
                    class="w-5 h-5 opacity-70 hover:opacity-100 transition-opacity duration-200"
                  />
                ))}
              </div>
            )}
            <div class="mt-2.5 text-xs font-medium text-neutral-800 dark:text-neutral-300">
              Posted on {post.data.dateFormatted}
            </div>
          </div>
        </div>
      ))}
    </div>

    {topicPosts.length === 0 && (
      <div class="text-center py-12">
        <div class="text-6xl mb-4">üìù</div>
        <h3 class="text-xl font-semibold text-neutral-900 dark:text-neutral-100 mb-2">
          No posts yet
        </h3>
        <p class="text-neutral-600 dark:text-neutral-400">
          There are no posts in the {topicName} topic yet. Check back soon!
        </p>
      </div>
    )}
    </section>
  </main>
</Layout>
